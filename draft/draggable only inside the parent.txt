// use as custom-draggable
  	app.directive('customDraggable', ['$document', function($document) {
    	return {
      		link: function(scope, element, attr) {
        		var startX = 0, startY = 0, x = 0, y = 0;

		        element.css({
		         position: 'relative',
		         border: '1px solid red',
		         backgroundColor: 'lightgrey',
		         cursor: 'pointer'
		        });

		        element.on('mousedown', function(event) {
		          // Prevent default dragging of selected content
		          event.preventDefault();
		          startX = event.pageX - x;
		          startY = event.pageY - y;
		          $document.on('mousemove', mousemove);
		          $document.on('mouseup', mouseup);
		        });

		        function mousemove(event) {
		          var bounds = event.target.parentElement.getBoundingClientRect();
		          var boundsTarget = event.target.getBoundingClientRect();
		          
		          x = event.pageX - startX;

		          if( x < 0 ){
		            x = 0;
		          }

		          if( x + boundsTarget.width > bounds.width ){
		            x = bounds.width - boundsTarget.width;
		          }
		          
		          element.css({
		            left:  x + 'px'
		          });
		        }

		        function mouseup() {
		          $document.off('mousemove', mousemove);
		          $document.off('mouseup', mouseup);
		        }
      		}
    	};
    }]);